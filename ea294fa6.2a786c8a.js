(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{205:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var i=n(2),r=n(9),a=(n(0),n(214)),o={},l={id:"conflux-rust/changelogs/CHANGELOG-1.1.x",title:"CHANGELOG-1.1.x",description:"1.1.2",source:"@site/docs/conflux-rust/changelogs/CHANGELOG-1.1.x.md",permalink:"/docs/conflux-rust/changelogs/CHANGELOG-1.1.x",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/conflux-rust/changelogs/CHANGELOG-1.1.x.md",lastUpdatedAt:1614926397},c=[{value:"Improvements",id:"improvements",children:[{value:"Configuration Improvements",id:"configuration-improvements",children:[]},{value:"RPC Improvements",id:"rpc-improvements",children:[]},{value:"Performance Optimization",id:"performance-optimization",children:[]}]},{value:"Bug Fixes",id:"bug-fixes",children:[]},{value:"Incompatible Changes",id:"incompatible-changes",children:[]},{value:"Improvements",id:"improvements-1",children:[]},{value:"Incompatible changes",id:"incompatible-changes-1",children:[]},{value:"Improvements",id:"improvements-2",children:[]}],b={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"112"},"1.1.2"),Object(a.b)("h2",{id:"improvements"},"Improvements"),Object(a.b)("h3",{id:"configuration-improvements"},"Configuration Improvements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Change the default node type to ",Object(a.b)("inlineCode",{parentName:"li"},"full")," node instead of ",Object(a.b)("inlineCode",{parentName:"li"},"archive")," node. And allow setting the node type in the\nconfiguration file with the entry ",Object(a.b)("inlineCode",{parentName:"li"},"node_type"),"."),Object(a.b)("li",{parentName:"ul"},"Add parameters to independently configure the garbage collection time of different kinds of data (like receipts,\ntransactions, block traces, state, e.t.c.). Check the ",Object(a.b)("inlineCode",{parentName:"li"},"additional_maintained_*")," entries in ",Object(a.b)("inlineCode",{parentName:"li"},"run/tethys.toml"),"."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("inlineCode",{parentName:"li"},"block_db_dir")," or ",Object(a.b)("inlineCode",{parentName:"li"},"netconf_dir")," is not set, put the default directory in the one configured with ",Object(a.b)("inlineCode",{parentName:"li"},"conflux_data_dir"),".\nThe old behavior is to be put in the hard-coded ",Object(a.b)("inlineCode",{parentName:"li"},"./blockchain_data"),".")),Object(a.b)("h3",{id:"rpc-improvements"},"RPC Improvements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Add new local RPC ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getEpochReceipts")," to allow querying receipts based on an epoch number."),Object(a.b)("li",{parentName:"ul"},"Add new trace RPC ",Object(a.b)("inlineCode",{parentName:"li"},"trace_filter")," to allow querying traces based on epochs/types/offset."),Object(a.b)("li",{parentName:"ul"},"Add new fields ",Object(a.b)("inlineCode",{parentName:"li"},"latestCheckpoint"),", ",Object(a.b)("inlineCode",{parentName:"li"},"latestConfirmed"),", and ",Object(a.b)("inlineCode",{parentName:"li"},"latestState")," in ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getStatus"),"."),Object(a.b)("li",{parentName:"ul"},"Improve some RPC error reporting.")),Object(a.b)("h3",{id:"performance-optimization"},"Performance Optimization"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reduce the memory usage for maintaining more snapshots with the configuration ",Object(a.b)("inlineCode",{parentName:"li"},"additional_maintained_snapshot_count"),".")),Object(a.b)("h2",{id:"bug-fixes"},"Bug Fixes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Fix a possible OOM error when a full node is catching up."),Object(a.b)("li",{parentName:"ul"},"Return correct ",Object(a.b)("inlineCode",{parentName:"li"},"block_number")," in ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getStatus"),"."),Object(a.b)("li",{parentName:"ul"},"Fix a bug that makes the configuration ",Object(a.b)("inlineCode",{parentName:"li"},"mining_author")," require extra quotes to use a CIP-37 base32 address.")),Object(a.b)("h1",{id:"111"},"1.1.1"),Object(a.b)("h2",{id:"incompatible-changes"},"Incompatible Changes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"CIP-37: Conflux to shift to base32 address format. The hex address format similar to Ethereum is deprecated in rpc interactions to full node.")),Object(a.b)("h2",{id:"improvements-1"},"Improvements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reduce delay in logs pub-sub; now we send logs immediately after they become available."),Object(a.b)("li",{parentName:"ul"},"Implement Execution Trace functionality. It includes detailed call/create/return/internal_transfer events being triggered by a transfer. Inspecting the trace information will enable the applications like conflux-scan to be able to track all transfers of CFX accurately. "),Object(a.b)("li",{parentName:"ul"},"Support CIP-37 address format in ",Object(a.b)("inlineCode",{parentName:"li"},"mining_author")," configuration."),Object(a.b)("li",{parentName:"ul"},"Include ",Object(a.b)("inlineCode",{parentName:"li"},"networkId")," in ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getStatus")," response."),Object(a.b)("li",{parentName:"ul"},"Include ",Object(a.b)("inlineCode",{parentName:"li"},"address")," in ",Object(a.b)("inlineCode",{parentName:"li"},"RpcAccount"),"."),Object(a.b)("li",{parentName:"ul"},"New RPC ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getSupplyinfo")," to get the total CFX supply and the circulating CFX supply.")),Object(a.b)("h1",{id:"110"},"1.1.0"),Object(a.b)("h2",{id:"incompatible-changes-1"},"Incompatible changes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"CIP-38: Reduce the block base reward to 2 CFX from the epoch number 3,615,000."),Object(a.b)("li",{parentName:"ul"},"CIP-39: Blocks from the height 3,615,000 (included) are required to set the first element of their ",Object(a.b)("inlineCode",{parentName:"li"},"custom")," field in the header to ",Object(a.b)("inlineCode",{parentName:"li"},"[1]"),".")),Object(a.b)("h2",{id:"improvements-2"},"Improvements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Return the ",Object(a.b)("inlineCode",{parentName:"li"},"custom")," field in the block header for related RPCs (",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getBlockByHash"),", ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getBlockByHashWithPivotAssumption"),", ",Object(a.b)("inlineCode",{parentName:"li"},"cfx_getBlockByEpochNumber"),").")))}p.isMDXComponent=!0},214:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,s=u["".concat(o,".").concat(m)]||u[m]||d[m]||a;return n?r.a.createElement(s,l(l({ref:t},b),{},{components:n})):r.a.createElement(s,l({ref:t},b))}));function s(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var b=2;b<a;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);